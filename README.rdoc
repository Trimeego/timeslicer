= Timeslicer

Many popular charting and reporting engines, such as Highchart or Flot expect data to be presented as arrays against a catoegory axis or datetime axis. Timeslicer will take a span of time, accept time point with values and then slice it into durations (days, weeks, months, etc.), while aggregating the points across the durations.

== Features
* Can slice into common time units (day, month, week, etc)
* Handles time units of varying durations (months, leap years)
* Can aggregate time point data using several methods (sum, min, max)

== Install

Put this line in your Gemfile:
  gem 'timeslicer'

Then bundle:
  % bundle

== Usage

=== Simple Slicing
  # some arbitrary starts and stop time
  @test_start = Time.mktime(2010, 2, 5, 13, 30,  47)
  @test_stop = Time.mktime(2011, 2, 5, 13, 30,  47)  
  
  ts = Timeslicer::Slicer.new(@test_start, @test_stop)
  slices = ts.slice('month') #returns 13 month TimeIntervals

=== Also takes string start/stops
  ts = Timeslicer::Slicer.new('01/01/2010', '01/01/2011')
  slices = ts.slice('month') #returns 12 month TimeIntervals
  
=== Simple data aggregation
  ts = Timeslicer::Slicer.new('06/01/2010', '06/01/2011')
  ts.add_timepoint('3/7/2011 13:30:04', 4, {:data => 'test'})
  ts.add_timepoint('1/7/2011 13:30:04', 4, {:data => 'test'})
  
  # returns the sums for all of the intervals
  slices = ts.slice('month')
  slices.map{|interval| interval.sum}
  => [0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
  
  slices.map{|interval| interval.start_time.strftime("%b")}
  => ["Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May", "Jun"]  

